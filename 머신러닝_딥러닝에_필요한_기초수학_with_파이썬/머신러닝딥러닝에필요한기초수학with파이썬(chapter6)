{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"머신러닝딥러닝에필요한기초수학with파이썬(chapter6)","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMatMgOCPp0FZVxW/ZLqy65"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"h7s9efB1_r42","executionInfo":{"status":"ok","timestamp":1619231762188,"user_tz":-540,"elapsed":1874,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}}},"source":["import sympy"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"Oy742Cu3AMXr","executionInfo":{"status":"ok","timestamp":1618867249271,"user_tz":-540,"elapsed":982,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"feaf3b3e-8eec-4b8f-ea19-e254fe22e051"},"source":["x=sympy.Symbol('x')\n","f=(x**2+2*x)*sympy.log(x)\n","df=sympy.diff(f, x)\n","df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/latex":"$\\displaystyle \\left(2 x + 2\\right) \\log{\\left(x \\right)} + \\frac{x^{2} + 2 x}{x}$","text/plain":["(2*x + 2)*log(x) + (x**2 + 2*x)/x"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"ByY8mOxZAj5k","executionInfo":{"status":"ok","timestamp":1618867295518,"user_tz":-540,"elapsed":661,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"fc202321-6fb3-4b36-b61d-7236fca9a95c"},"source":["sympy.simplify(df)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/latex":"$\\displaystyle x + 2 \\left(x + 1\\right) \\log{\\left(x \\right)} + 2$","text/plain":["x + 2*(x + 1)*log(x) + 2"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"gBnkXaxCGQpe"},"source":["import numpy as np\n","\n","f=lambda x: (x**2+2*x)*np.log(x)\n","df=lambda x: 2*(x+1)*np.log(x)+(x+2)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dPIpLoOlDVIA"},"source":["#f를 정의해야지!#\n","#indentation이 정말 중요하다!#\n","def numer_deriv(f, x, h=0.001, method=\"center\"):\n","  \"\"\"\n","  {f(x+h)-(x)}/h을 수치적으로 계산\n","  f: 미분할 함수로 주어진 위치에서 함숫값 계산을 위해 사용\n","  x: 미분 계수를 구할 변수의 위치로\n","    일변수일 경우 int 또는 float\n","    다변수일 경우 numpy array (d,) 벡터\n","  h: 비율을 구할 작은 구간\n","  \"\"\"\n","  if type(x) in (float, int):\n","    grad=[0,0]\n","    x_=[x]\n","    var_type='scalar'\n","  else:\n","    grad=np.zeros(x.shape)\n","    x_=x.copy().astype('float32')\n","    var_type='vector'\n","    \n","  for i, xi in enumerate(x_):\n","    original_value=x_[i]\n","\n","    if method=='forward':\n","      x_[i]=original_value+h\n","    else:\n","      x_[i]=original_value+(h/2)\n","    \n","    if var_type=='scalar':\n","      gradplus=f(x_[i])\n","    else:\n","      gradplus=f(x_)\n","\n","    if method=='forward':\n","      x_[i]=original_value\n","    else:\n","      x_[i]=original_value-(h/2)\n","\n","    if var_type=='scalar':\n","      gradminus=f(x_[i])\n","    else:\n","      gradminus=f(x_)\n","\n","    grad[i]=(gradplus-gradminus)/h\n","\n","  if var_type=='scalar':\n","    return grad[0]\n","  else:\n","    return grad"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IA8-_wMYIuB1","executionInfo":{"status":"ok","timestamp":1618899083471,"user_tz":-540,"elapsed":859,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"4e572fc1-c16a-4d97-cabc-cedc2c351717"},"source":["numer_deriv(f, 1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.999999999999666"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Okjw15qT1FLf","executionInfo":{"status":"ok","timestamp":1618899087158,"user_tz":-540,"elapsed":2146,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"74954e85-b8a6-49c2-f9bc-72282aef64fd"},"source":["print(numer_deriv(f, 1, h=0.5, method='forward'))\n","print(numer_deriv(f, 1, h=0.5, method='center'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["4.257383635135726\n","2.9997299032915508\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vSiPVWs04Bt9","executionInfo":{"status":"ok","timestamp":1618899091191,"user_tz":-540,"elapsed":963,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"907a7b64-d715-4bf9-c3f8-f7cb29285656"},"source":["f_xy=lambda x: (x[0]**2 + 2*x[0])*np.log(x[1])\n","numer_deriv(f_xy, np.array([1,2]))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2.77255299, 1.49889143])"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nugloa72u0Qg","executionInfo":{"status":"ok","timestamp":1619232043585,"user_tz":-540,"elapsed":623,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"d3047fc3-38f1-4bc1-bf25-acaf065d58d7"},"source":["x=sympy.Symbol('x')\n","y=sympy.Symbol('y')\n","f_xy_sympy=(x**2+2*x)*sympy.log(y)\n","df_xy_x=sympy.diff(f_xy_sympy, x)\n","df_xy_y=sympy.diff(f_xy_sympy, y)\n","\n","print(df_xy_x)\n","print(df_xy_y)\n","\n","print(\"{:.4f}\".format(df_xy_x.evalf(subs={x:1.0, y:2.0})))\n","print(\"{:.4f}\".format(df_xy_y.evalf(subs={x:1.0, y:2.0})))"],"execution_count":2,"outputs":[{"output_type":"stream","text":["(2*x + 2)*log(y)\n","(x**2 + 2*x)/y\n","2.7726\n","1.5000\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7mLY9dEKye2Q","executionInfo":{"status":"ok","timestamp":1619234843512,"user_tz":-540,"elapsed":3300,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}}},"source":["import numpy as np\n","import torch"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"79-TZTD16vq4","executionInfo":{"status":"ok","timestamp":1619235296705,"user_tz":-540,"elapsed":611,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"f4504f00-368c-47dc-c7f2-94c30ba5489a"},"source":["np.random.seed(0)\n","x=np.random.rand(6).reshape(2,3)\n","\n","x_tensor=torch.tensor(x)\n","x_from_numpy=torch.from_numpy(x)\n","x_Tensor=torch.Tensor(x)\n","x_as_tensor=torch.as_tensor(x)\n","\n","print(x, x.dtype)\n","print(x_tensor, x_tensor.dtype, x_tensor.requires_grad)\n","print(x_from_numpy, x_from_numpy.dtype, x_from_numpy.requires_grad)\n","print(x_Tensor, x_Tensor.dtype, x_Tensor.requires_grad)\n","print(x_as_tensor, x_as_tensor.dtype, x_as_tensor.requires_grad)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["[[0.5488135  0.71518937 0.60276338]\n"," [0.54488318 0.4236548  0.64589411]] float64\n","tensor([[0.5488, 0.7152, 0.6028],\n","        [0.5449, 0.4237, 0.6459]], dtype=torch.float64) torch.float64 False\n","tensor([[0.5488, 0.7152, 0.6028],\n","        [0.5449, 0.4237, 0.6459]], dtype=torch.float64) torch.float64 False\n","tensor([[0.5488, 0.7152, 0.6028],\n","        [0.5449, 0.4237, 0.6459]]) torch.float32 False\n","tensor([[0.5488, 0.7152, 0.6028],\n","        [0.5449, 0.4237, 0.6459]], dtype=torch.float64) torch.float64 False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WK-ZXYC488OS","executionInfo":{"status":"ok","timestamp":1619236089140,"user_tz":-540,"elapsed":680,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"ce601459-6594-480d-d0f3-85dbbde74cec"},"source":["x[0,0]=100 #0행, 0렬 100으로 바꾸기\n","print(x, x.dtype)\n","print(x_tensor, x_tensor.dtype, x_tensor.requires_grad)\n","print(x_from_numpy, x_from_numpy.dtype, x_from_numpy.requires_grad)\n","print(x_Tensor, x_Tensor.dtype, x_Tensor.requires_grad)\n","print(x_as_tensor, x_as_tensor.dtype, x_as_tensor.requires_grad)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["[[100.           0.71518937   0.60276338]\n"," [  0.54488318   0.4236548    0.64589411]] float64\n","tensor([[0.5488, 0.7152, 0.6028],\n","        [0.5449, 0.4237, 0.6459]], dtype=torch.float64) torch.float64 False\n","tensor([[100.0000,   0.7152,   0.6028],\n","        [  0.5449,   0.4237,   0.6459]], dtype=torch.float64) torch.float64 False\n","tensor([[0.5488, 0.7152, 0.6028],\n","        [0.5449, 0.4237, 0.6459]]) torch.float32 False\n","tensor([[100.0000,   0.7152,   0.6028],\n","        [  0.5449,   0.4237,   0.6459]], dtype=torch.float64) torch.float64 False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hPBFEKpeRrkG","executionInfo":{"status":"ok","timestamp":1619240971547,"user_tz":-540,"elapsed":612,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"a6b412f2-d31a-4675-af7b-515ed5662c5a"},"source":["x_tensor_grad=torch.tensor(x, requires_grad=True)\n","print(x_tensor_grad, x_tensor_grad.dtype, x_tensor_grad.requires_grad)"],"execution_count":8,"outputs":[{"output_type":"stream","text":["tensor([[100.0000,   0.7152,   0.6028],\n","        [  0.5449,   0.4237,   0.6459]], dtype=torch.float64,\n","       requires_grad=True) torch.float64 True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xlU8itcvV3DG","executionInfo":{"status":"ok","timestamp":1619242014404,"user_tz":-540,"elapsed":822,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"a7e9d5a1-f589-415b-e144-f8be59c976f9"},"source":["x=torch.tensor([1.0], requires_grad=True)\n","f=(x**2+ 2*x)* torch.log(x)\n","\n","print(x)\n","print(f)\n","print(x.grad)"],"execution_count":9,"outputs":[{"output_type":"stream","text":["tensor([1.], requires_grad=True)\n","tensor([0.], grad_fn=<MulBackward0>)\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h6oEK-ijW3Ua","executionInfo":{"status":"ok","timestamp":1619242257331,"user_tz":-540,"elapsed":623,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"1de54892-e78b-4241-e68c-d27dbe9fde67"},"source":["#계산 그래프의 끝에서 거꾸로 계산 그래프의 사작까지 거슬러 올라가면서 사용자가 만든 변수들에 대한 미분 계수를 구해주는 함수\n","torch.autograd.backward(f, retain_graph=True)\n","print(x.grad)"],"execution_count":11,"outputs":[{"output_type":"stream","text":["tensor([3.])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"siV0rswFwTUq","executionInfo":{"status":"ok","timestamp":1619249032246,"user_tz":-540,"elapsed":606,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"80db76f1-4d14-4192-eb27-96dcdb1c1859"},"source":["#종속변수와 미분할 변수를 모두 명시적으로 지정해주고 반환값으로 바로 미분 계수를 받음\n","df=torch.autograd.grad(f, x, retain_graph=True)\n","print(df)"],"execution_count":12,"outputs":[{"output_type":"stream","text":["(tensor([3.]),)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JpfRLyn2wC47","executionInfo":{"status":"ok","timestamp":1619249849410,"user_tz":-540,"elapsed":776,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"7a912c98-512f-41b5-da6c-77854a028d3b"},"source":["#이변수함수 이상의 미분계수\n","x=torch.tensor([1.0], requires_grad=True)\n","y=torch.tensor([2.0], requires_grad=True)\n","f_xy=(x**2 + 2*x)*torch.log(y)\n","\n","torch.autograd.backward(f_xy, retain_graph=True)\n","print(x.grad)\n","print(y.grad)\n","\n","df=torch.autograd.grad(f_xy, (x, y), retain_graph=True)\n","print(df)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["tensor([2.7726])\n","tensor([1.5000])\n","(tensor([2.7726]), tensor([1.5000]))\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ux5BaCK60A7A","executionInfo":{"status":"ok","timestamp":1619253318417,"user_tz":-540,"elapsed":639,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"8e4ab9da-90c5-4d4b-fb3b-9895389a83ac"},"source":["def times(x, y):\n","  return x*y, (x, y)\n","\n","def times_deriv(cache, dout=1):\n","  return cache[1]*dout, cache[0]*dout\n","\n","TIMES={'f': times, 'df': times_deriv}\n","\n","v, cache=TIMES['f'](2, 3)\n","dx, dy=TIMES['df'](cache)\n","\n","def add(x, y):\n","  return x+y, (x, y)\n","\n","def add_deriv(cache, dout=1):\n","  return dout, dout\n","\n","ADD={'f': add, 'df': add_deriv}\n","\n","def log(x):\n","  return np.log(x), x\n","\n","def log_deriv(cache, dout=1):\n","  return (1/cache)*dout\n","\n","LOG={'f': log, 'df': log_deriv}\n","\n","print(\"dx={}, dy={}\".format(dx, dy))\n"],"execution_count":15,"outputs":[{"output_type":"stream","text":["dx=3, dy=2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"romzmQHzBOGs","executionInfo":{"status":"ok","timestamp":1619253451617,"user_tz":-540,"elapsed":874,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}}},"source":["#단위 함수를 순전파, 각 단계마다 함수 값과 추가 정보를 적절한 변수에 저장\n","x=1. ; y=2.\n","a, cache_a=TIMES['f'](x, x)\n","b, cache_b=TIMES['f'](2, x)\n","c, cache_c=ADD['f'](a, b)\n","d, cache_d=LOG['f'](y)\n","z, cache_z=TIMES['f'](c, d)"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gz8dKVv0B28L","executionInfo":{"status":"ok","timestamp":1619254064776,"user_tz":-540,"elapsed":680,"user":{"displayName":"Sunghyouk Choi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjfi_3YVQAALkED6RjhwhmroqI3RUr4XVe6I6c3EQ=s64","userId":"07989748862235708762"}},"outputId":"3ed2d0ff-d9cc-4a2e-8780-6f95f24586cb"},"source":["#역순으로 호출하면서 미분 계수를 구함\n","dx=dy=0. #미분 계수를 저장할 변수를 초기화\n","dc, dd=TIMES['df'](cache_z, 1)\n","dy=LOG['df'](cache_d, dd)\n","da, db=ADD['df'](cache_c, dc)\n","_, dx_=TIMES['df'](cache_b, db); dx+=dx_;\n","dx_, dx__=TIMES['df'](cache_a, da); dx+=dx_+dx__;\n","\n","print(\"backward pass dx={:.6f}, dy={:.6f}\".format(dx, dy))\n"],"execution_count":17,"outputs":[{"output_type":"stream","text":["backward pass dx=2.772589, dy=1.500000\n"],"name":"stdout"}]}]}